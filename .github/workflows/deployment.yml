name: Deployment
on:
  push:
    branches:
      - master
jobs:
  deployment:
    name: Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Log into server and deploy
        uses: appleboy/ssh-action@v0.1.10
        env:
          RAILS_ENV: "production"
          RAILS_MASTER_KEY: ${{ secrets.RAILS_PRODUCTION_KEY }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          port: ${{ secrets.SSH_PORT }}
          envs: RAILS_ENV,RAILS_MASTER_KEY,POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB
          script: |
            git clone ${{ github.server_url }}/${{ github.repository }}.git
            cd ${{ github.event.repository.name }}
            docker compose up --build -d
            cd .. && rm -rf ${{ github.event.repository.name }}
      - name: Create release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ github.ref_name }}'.split('/').pop()
            await github.rest.repos.createRelease({
              owner: '${{ github.repository_owner }}',
              repo: '${{ github.event.repository.name}}',
              tag_name: tag,
              name: `Release v${tag}`,
              target_commitish: 'master',
              draft: false,
              prerelease: false,
              generate_release_notes: false
            });
